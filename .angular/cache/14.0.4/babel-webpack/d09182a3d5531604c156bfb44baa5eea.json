{"ast":null,"code":"import { Satellite } from './satellite';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./orbit-counts/orbit-counts.component\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor() {\n      this.title = 'orbit-report';\n      this.sourceList = [];\n      this.displayList = [];\n      let satellitesUrl = 'https://handlers.education.launchcode.org/static/satellites.json';\n      window.fetch(satellitesUrl).then(function (response) {\n        response.json().then(function (data) {\n          let fetchedSatellites = data.satellites; // loop over satellites\n\n          for (let i = 0; i < fetchedSatellites.length; i++) {\n            // create a Satellite object \n            let satellite = new Satellite(fetchedSatellites[i].name, fetchedSatellites[i].type, fetchedSatellites[i].launchDate, fetchedSatellites[i].orbitType, fetchedSatellites[i].operational); // add the new Satellite object to sourceList \n\n            this.sourceList.push(satellite);\n          } // make a copy of the sourceList to be shown to the user\n\n\n          this.displayList = this.sourceList.slice(0);\n        }.bind(this));\n      }.bind(this));\n    }\n\n    search(searchTerm) {\n      let matchingSatellites = [];\n      searchTerm = searchTerm.toLowerCase();\n\n      for (let i = 0; i < this.sourceList.length; i++) {\n        let name = this.sourceList[i].name.toLowerCase();\n\n        if (name.indexOf(searchTerm) >= 0) {\n          matchingSatellites.push(this.sourceList[i]);\n        }\n      } // assign this.displayList to be the array of matching satellites\n      // this will cause Angular to re-make the table, but now only containing matches\n\n\n      this.displayList = matchingSatellites;\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)();\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 10,\n    vars: 1,\n    consts: [[1, \"search-form\"], [\"type\", \"text\", \"name\", \"searchTerm\", 3, \"keyup.enter\"], [\"searchTerm\", \"\"], [3, \"click\"], [3, \"satellites\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Orbit Report\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0);\n        i0.ɵɵtext(3, \" Search: \");\n        i0.ɵɵelementStart(4, \"input\", 1, 2);\n        i0.ɵɵlistener(\"keyup.enter\", function AppComponent_Template_input_keyup_enter_4_listener() {\n          i0.ɵɵrestoreView(_r1);\n\n          const _r0 = i0.ɵɵreference(5);\n\n          return i0.ɵɵresetView(ctx.search(_r0.value));\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_6_listener() {\n          i0.ɵɵrestoreView(_r1);\n\n          const _r0 = i0.ɵɵreference(5);\n\n          return i0.ɵɵresetView(ctx.search(_r0.value));\n        });\n        i0.ɵɵtext(7, \"Search\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(8, \"app-orbit-counts\", 4)(9, \"app\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"satellites\", ctx.displayList);\n      }\n    },\n    dependencies: [i1.OrbitCountsComponent],\n    styles: [\".search-form[_ngcontent-%COMP%]{margin-bottom:40px}button[_ngcontent-%COMP%]{margin-left:10px;color:#fff;background-color:#009b25;border-radius:4px;padding:2px 5px;font-size:18px;cursor:pointer}\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}